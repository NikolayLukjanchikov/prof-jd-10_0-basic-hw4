public class Main {
    public static void main(String[] args) {
        Task1();
        Task2();
        Task3();
        Task4();
        Task5();
    }

    public static void Task1() {
        //### Задание 1
        //Выведите в одну строку через пробел числа от 1 до 10, используя цикл while.
        //На следующей строке выведите числа в обратном порядке от 10 до 1, используя оператор for.
        //Для обоих циклов можно использовать как одну общую переменную, так и в каждом цикле свою.
        //Не забудьте выполнить переход на новую строку между двумя циклами.
        //В результате программы вывод должен получиться следующий:
        //1 2 3 4 5 6 7 8 9 10
        //10 9 8 7 6 5 4 3 2 1
        System.out.println("Задание 1");
        int counter = 0;
        while (counter < 10) {
            counter++;
            System.out.print(counter + " ");
        }
        System.out.println(" ");        //переход на новую строку между циклами
        for (; counter > 0; counter--) {
            System.out.print(counter + " ");
        }
        System.out.println(" ");

    }

    public static void Task2() {
        //### Задание 2
        //В вашей компании пятница является днем отчетным.
        //Нам нужно написать программу, которая считает дни месяца по датам, определяет, какой день пятница, и выводит сообщение с напоминанием о том, что нужно подготовить еженедельный отчет.
        //Условия задачи:
        //Создайте переменную типа int, которая хранит в себе номер первой пятницы месяца (число от 1 до 7).
        //Выведите на каждую пятницу месяца (включая полученную) сообщение следующего вида:
        //"Сегодня пятница, ...-е число. Необходимо подготовить отчет."
        //В нашем месяце 31 день. В результате у вас должно вывестись от 4 до 5 сообщений с напоминаниями по разным датам.
        System.out.println("Задание 2");
        int firstFridayNumber = 3;
        for (int dayNumber = 0; dayNumber <=31; dayNumber++ ) {
            if (dayNumber == firstFridayNumber) {       //если номер дня совпадает с номером пятницы, то выводим номер дня и пишем, что это пятница
                System.out.println("Сегодня пятница, " + dayNumber + "-е число. Необходимо подготовить отчет.");
                firstFridayNumber = firstFridayNumber + 7;          //увеличиваем номер пятницы на неделю таким образом получим новую дату пятницы
            }
        }
    }

    public static void Task3() {
        //Мы решили написать астрономическое приложение, которое считает, когда над Землей пролетают кометы и их можно будет увидеть. Для начала нам нужно посчитать траекторию движения кометы, которая пролетает рядом с Землей каждый 79-й год, начиная с нулевого.
        //Нам нужно узнать, в каких годах комета пролетала рядом с Землей за последние 200 лет и когда мы увидим ее в следующий раз.
        //Условия задачи:
        //В консоль нужно вывести все годы за последние 200 лет, когда появлялась комета, а также следующий год ее появления.
        //Для вычисления периода можно создать две дополнительные переменные, которые содержат год за 200 лет до текущего (из созданной ранее переменной) в качестве старта и 100 лет после в качестве завершения периода расчета.
        //В результате решения задачи в консоль должен вывестись следующий результат:
        //1896
        //1975
        //2054
        System.out.println("Задание 3, годы прилёта кометы:");
        int cometPeriod = 79;       //период обращения кометы
        int cometComeYear = 0;      //год начала отсчёта прилёта кометы
        int currentYear = 2022;     //текущий год
        int beforeCurrentYear201 = currentYear - 201;       //граничные условия для проверки пердыдущих 200 лет до текущего года
        int afterCurrentYear100 = currentYear + 100;         //граничные условия для проверки следующего прилёта кометы
        do {
            cometComeYear = cometComeYear + cometPeriod;        //вычисляем года появления кометы
            if (cometComeYear > beforeCurrentYear201 && cometComeYear < afterCurrentYear100) {      //если год прилёта попал в наши рамки анализа -200/+100 к текущему году, то выводим этот год в консоль
                System.out.println(cometComeYear);
            }

        } while (cometComeYear < afterCurrentYear100);      // совершаем нашу проверку пока не дойдём до заданного гриничного условия
    }

    public static void Task4() {
        //Задание 4
        //Это задание очень любят давать на собеседованиях в разных вариациях, потому мы предлагаем его вам, чтобы вы оценили свои силы.
        //Необходимо пройти циклом по числам от 1 до 30 включительно и, если число делится на 3 без остатка, вывести ping, а если число делится на 5 без остатка, вывести pong.
        //Если число делится без остатка и на 3, и на 5, необходимо вывести ping pong.
        //Допускается наличие пустых строк в выводе.
        //Вывод должен быть следующий:
        //1:
        //2:
        //3: ping
        //4:
        //5: pong
        //6: ping
        //7:
        //8:
        //9: ping
        //10: pong
        //11:
        //12: ping
        //13:
        //14:
        //15: ping pong
        //16:
        //17:
        //18: ping
        //19:
        //20: pong
        System.out.println("Задание 4*");
        int ping = 3;
        int pong = 5;
        for (int i =1; i <=30; i++) {       //перебираем значения от 1 до 30
            if ((i % ping == 0) && (i % pong == 0)) {       //если число делится на 3 и 5 без остатка, то пинпонг
                System.out.println(i + ": ping pong");
            } else if (i % ping == 0) {
                System.out.println(i + ": ping");       //если число делится только на 3 без остатко, то пинг
            } else if (i % pong == 0) {
                System.out.println(i + ": pong");       //если число делится только на 5 без остатко, то понг
            } else System.out.println(i + ": ");
        }
    }

    public static void Task5() {
        //Вывести первые 10 чисел последовательности Фибоначчи. Последовательность строится по следующему правилу:
        //– Каждое следующее число равняется сумме двух предыдущих.
        //Дано: две целочисленные переменные, первая равна 0, вторая равна 1.
        //Эти два числа — первые числа последовательности. Следующие восемь нужно вычислить и вывести.
        //Должно получиться следующее:
        //0 1 1 2 3 5 8 13 21 34
        //Справка
        //Числа Фибоначчи – элементы числовой последовательности
        //0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, … , в которой первые два числа равны 0 и 1, а каждое последующее число равно сумме двух предыдущих чисел. Названы в честь средневекового математика Леонардо Пизанского.
        System.out.println("Задание 5*");
        int firstNumber = 0;        //первое число Фибоначчи
        int secondNumber = 1;       //второе число Фибоначчи
        int fibo;                   //сюда пишем числа Фибоначчи
        System.out.print(firstNumber + " " + secondNumber + " ");       //выводим первые 2 числа
        for (int i = 0; i < 8; i++) {       //выполняем цикл вычисления чисел 8 раз
            fibo = firstNumber + secondNumber;      //складываем первое и второе число
            firstNumber = secondNumber;             //второе число теперь становится первым для следующего расчёта
            secondNumber = fibo;                    //второе число для следующего расчёта равно вычисленному числу Фибоначчи на текущей итерации
            System.out.print(fibo + " ");           //выводим вычесленное значение в строчку
        }
    }
}